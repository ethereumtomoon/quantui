var view = require("ui/core/view");
var dialogs = require("ui/dialogs");


var NavigationDrawer = (function () {
    this.isInitialized = false;
    NavigationDrawer.prototype.init = function (activity) {
        if (typeof activity == 'undefined')
            return;
        this.activity = activity;
        this.android = com.picsart.chat.NavigationDrawer.createNavigationDrawer(this.activity);
        this.android.setToolbarColor(0xFFE6E6E6);
        var navigationDrawer = this.android;
        activity.addContentView(this.android, com.picsart.chat.NavigationDrawer.linearLayoutLayoutParamsMatchParent);
        this.isInitialized = true;
    };
    
    NavigationDrawer.prototype.closeDrawer = function () {
        if (this.isInitialized)
            this.android.closeNavigationDrawer();
    };
    
    NavigationDrawer.prototype.setMainContent = function (content) {
        if (this.isInitialized)
            this.android.setMainContent(content);
    };
    
    NavigationDrawer.prototype.setNavigationContent = function (content) {
        if (this.isInitialized)
            this.android.setNavigationContent(content);
    };
    
    NavigationDrawer.prototype.load = function (page, actionBarId, contentId, navigationId) {
        if (this.isInitialized && (typeof page != 'undefined')) {
            var navigationView = view.getViewById(page, navigationId || "navigation");
            if (typeof navigationView != 'undefined') {
                var navigation = navigationView.android;
                var navigationParent = navigation.getParent();
                if (typeof navigationParent != 'undefined') {
                    navigationParent.removeView(navigation);
                }
                this.setNavigationContent(navigation);
            }
            var contentView = view.getViewById(page, contentId || "content");
            if (typeof contentView != 'undefined') {
                var content = contentView.android;
                var contentParent = content.getParent();
                if (typeof contentParent != 'undefined') {
                    contentParent.removeView(content);
                }
                this.setMainContent(content);
            }
        }
    };
    
    NavigationDrawer.prototype.setNavigationWidth = function (width) {
        if (this.isInitialized && (typeof width != 'undefined')) {
            this.android.setNavigationWidth(width);
        }
    };

    NavigationDrawer.prototype.setTitle = function (title) {
        if (this.isInitialized)
            this.android.setToolbarTitle(title);
    };

    NavigationDrawer.prototype.addToolbarMenuItem = function (title) {
        if (this.isInitialized)
            this.android.addToolbarMenuItem(title);
    };

    NavigationDrawer.prototype.setToolbarMenuItemClick = function (args) {
        if (this.isInitialized) {
            this.android.setToolbarMenuItemClickListener(new android.support.v7.widget.Toolbar.OnMenuItemClickListener({
                onMenuItemClick: function (item) {
                    if (item.hasSubMenu())
                        return false;
                    var title = item.getTitle();
                    args(title);
                    return true;
                }
            }));
        }
    };
    
    NavigationDrawer.prototype.clearToolbarMenuItems = function () {
        if (this.isInitialized)
            this.getToolbarMenu().clear();
    };
    
    NavigationDrawer.prototype.getToolbarMenu = function () {
        if (this.isInitialized)
            return this.android.getToolbarMenu();
    };

    NavigationDrawer.prototype.show = function () {
        if (this.isInitialized) {
            this.android.show();
        }
    };

    NavigationDrawer.prototype.hide = function () {
        if (this.isInitialized) {
            this.android.hide();
        }
    };
    
    NavigationDrawer.prototype.setToolbarTitleClickListener = function (args) {
        if (this.isInitialized) {
            this.android.setToolbarClickListener(new android.view.View.OnClickListener({
                onClick: function () {
                    args();
                }
            }));
        }
    };
    
    NavigationDrawer.prototype.addToolbarButton = function (title, args) {
        if (this.isInitialized) {
            this.android.addToolbarButton(title, new android.view.MenuItem.OnMenuItemClickListener({
                onMenuItemClick: function (menuItem) {
                    args();
                    return true;
                }
            }));
        }
    };
    NavigationDrawer.prototype.addToolbarButtonWithIcon = function (imageName, args) {
        if (this.isInitialized) {
            this.android.addToolbarButtonWithIcon(imageName, new android.view.MenuItem.OnMenuItemClickListener({
                onMenuItemClick: function (menuItem) {
                    args();
                    return true;
                }
            }));
        }
    };

    NavigationDrawer.prototype.setToolbarNavigationClickListener = function (opened, closed) {
        if (this.isInitialized) {
            this.android.setToolbarNavigationClickListener(new com.picsart.chat.NavigationDrawer.OnToolbarNavigationClickListener({
                onDrawerOpened: function () {
                    if (opened)
                        opened();
                },
                onDrawerClosed: function () {
                    if (closed)
                        closed();
                }
            }));
        }
    };

    NavigationDrawer.prototype.destroy = function () {
        if (this.isInitialized) {
            this.android.destroy();
        }
    };

    NavigationDrawer.prototype.stausButtonShow = function () {
        if (this.isInitialized) {
            this.android.stausButtonShow();
        }
    };
    
    NavigationDrawer.prototype.stausButtonHide = function () {
        if (this.isInitialized) {
            this.android.stausButtonHide();
        }
    };
    
    NavigationDrawer.prototype.setStatusButtonColor = function (color) {
        if (this.isInitialized) {
            this.android.setStatusButtonColor(color);
        }
    };
    
    NavigationDrawer.prototype.setStatusButtonClickListener = function (args) {
        if (this.isInitialized) {
            this.android.setStatusButtonClickListener(new android.view.View.OnClickListener({
                onClick: function () {
                    args();
                }
            }));
        }
    };

});
exports.NavigationDrawer = NavigationDrawer;